# -*- coding: utf-8 -*-
"""
Created on Fri Jan 20 17:21:33 2023

@author: limyu
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from matplotlib.ticker import StrMethodFormatter
from scipy import interpolate
from scipy.signal import chirp, find_peaks, peak_widths

master_data_verticle = pd.DataFrame([])
master_data_horizontal = pd.DataFrame([])


df = pd.read_csv(r"C:\Users\limyu\Google Drive\focusing grating\2D grating GDS\grating type 4 branchs\different radius1 4x mag lower 50mA laser_0001.ascii.csv",header=None, sep=",")
    
df=df.dropna(axis=1)
print(df)

verticle_peaks = []
verticle_half = []
verticle_full = []

horizontal_peaks = []
horizontal_half = []
horizontal_full = []

x = np.linspace(0, 9570, num=320)
x = x/20
y = np.linspace(0, 7650, num=256)
y = y/20
colorbarmax = 4500
colorbartick = 9

X,Y = np.meshgrid(x,y)
df1 = df.to_numpy()

fig = plt.figure(figsize=(7, 4))
ax = plt.axes()
cp=ax.contourf(X,Y,df, 200, zdir='z', offset=-100, cmap='hot')
clb=fig.colorbar(cp, ticks=(np.arange(0, colorbarmax, 500)).tolist())
clb.ax.set_title('Photon/s', fontweight="bold")
for l in clb.ax.yaxis.get_ticklabels():
    l.set_weight("bold")
    l.set_fontsize(12)
ax.set_xlabel('x-position (µm)', fontsize=13, fontweight="bold", labelpad=1)
ax.set_ylabel('y-position (µm)', fontsize=13, fontweight="bold", labelpad=1)


ax.xaxis.label.set_fontsize(13)
ax.xaxis.label.set_weight("bold")
ax.yaxis.label.set_fontsize(13)
ax.yaxis.label.set_weight("bold")
ax.tick_params(axis='both', which='major', labelsize=13)
ax.set_yticklabels(ax.get_yticks(), weight='bold')
ax.set_xticklabels(ax.get_xticks(), weight='bold')
ax.xaxis.set_major_formatter(StrMethodFormatter('{x:,.1f}'))
ax.yaxis.set_major_formatter(StrMethodFormatter('{x:,.1f}'))
plt.savefig(r"C:\Users\limyu\Google Drive\focusing grating\2D grating GDS\grating type 4 branchs\radius1_lower_everything.png", dpi=300, bbox_inches="tight")
plt.show()
plt.close()

fig = plt.figure(figsize =(14, 9))
ax = plt.axes(projection ='3d')
ax.plot_surface(X, Y, df1, cmap='hot')
ax.set_xlabel('x-position (µm)', fontsize=13, fontweight="bold", labelpad=13)
ax.set_ylabel('y-position (µm)', fontsize=13, fontweight="bold", labelpad=15)
ax.set_zlabel('Photon/s', fontsize=13, fontweight="bold", labelpad=15)


ax.xaxis.label.set_fontsize(13)
ax.xaxis.label.set_weight("bold")
ax.yaxis.label.set_fontsize(13)
ax.yaxis.label.set_weight("bold")
ax.zaxis.label.set_fontsize(13)
ax.zaxis.label.set_weight("bold")
ax.tick_params(axis='both', which='major', labelsize=13)
ax.set_zticklabels(ax.get_zticks(), weight='bold')
ax.set_yticklabels(ax.get_yticks(), weight='bold')
ax.set_xticklabels(ax.get_xticks(), weight='bold')
ax.yaxis.set_major_formatter(StrMethodFormatter('{x:,.1f}'))
plt.savefig(r"C:\Users\limyu\Google Drive\focusing grating\2D grating GDS\grating type 4 branchs\radius1_lower_everything_3D.png", dpi=300, bbox_inches="tight")
plt.show()
plt.close()

df_r1 = df.iloc[226:250, 260:294]
df_r1_hor = df_r1.iloc[13,:]
df_r1_ver = df_r1.iloc[:, 14]
xr1 = np.linspace(0, 990, num=34)
xr1 = xr1/20
yr1 = np.linspace(0, 690, num=24)
yr1 = yr1/20
colorbarmax = 5000
colorbartick = 9



Xr1,Yr1 = np.meshgrid(xr1,yr1)
df_r1 = df_r1.to_numpy()
fig = plt.figure(figsize=(8, 4))
ax = plt.axes()
cp=ax.contourf(Xr1,Yr1,df_r1, 200, zdir='z', offset=-100, cmap='hot')
clb=fig.colorbar(cp, ticks=(np.arange(0, colorbarmax, 500)).tolist())
clb.ax.set_title('Photon/s', fontweight="bold")
for l in clb.ax.yaxis.get_ticklabels():
    l.set_weight("bold")
    l.set_fontsize(12)
ax.set_xlabel('x-position (µm)', fontsize=13, fontweight="bold", labelpad=1)
ax.set_ylabel('y-position (µm)', fontsize=13, fontweight="bold", labelpad=1)


ax.xaxis.label.set_fontsize(13)
ax.xaxis.label.set_weight("bold")
ax.yaxis.label.set_fontsize(13)
ax.yaxis.label.set_weight("bold")
ax.tick_params(axis='both', which='major', labelsize=13)
ax.set_yticklabels(ax.get_yticks(), weight='bold')
ax.set_xticklabels(ax.get_xticks(), weight='bold')
ax.xaxis.set_major_formatter(StrMethodFormatter('{x:,.1f}'))
ax.yaxis.set_major_formatter(StrMethodFormatter('{x:,.1f}'))
plt.savefig(r"C:\Users\limyu\Google Drive\focusing grating\2D grating GDS\grating type 4 branchs\30µm_2D.png", dpi=300, bbox_inches="tight")
plt.show()
plt.close()

#plot horizontal
ax2 = plt.axes()
tck = interpolate.splrep(xr1, df_r1_hor.tolist(), s=2, k=4) 
x_new = np.linspace(min(xr1), max(xr1), 1000)
y_fit = interpolate.BSpline(*tck)(x_new)
h_r1 = y_fit - min(y_fit)
peaks, _ = find_peaks(h_r1)
peaks_h = x_new[peaks]
horizontal_peaks.append(peaks_h)

results_half = peak_widths(h_r1, peaks, rel_height=0.5)
width = results_half[0]
width = [i*(x_new[1] - x_new[0]) for i in width]
width = np.array(width)
height = results_half[1]
x_min = results_half[2]
x_min = [i*(x_new[1] - x_new[0]) for i in x_min]
x_min = np.array(x_min)
x_max = results_half[3]
x_max = [i*(x_new[1] - x_new[0]) for i in x_max]
x_max = np.array(x_max)
results_half_plot = (width, height, x_min, x_max)

results_full = peak_widths(h_r1, peaks, rel_height=1)
width_f = results_full[0]
width_f = [i*(x_new[1] - x_new[0]) for i in width_f]
width_f = np.array(width_f)
height_f = results_full[1]
x_min_f = results_full[2]
x_min_f = [i*(x_new[1] - x_new[0]) for i in x_min_f]
x_min_f = np.array(x_min_f)
x_max_f = results_full[3]
x_max_f = [i*(x_new[1] - x_new[0]) for i in x_max_f]
x_max_f = np.array(x_max_f)
results_full_plot = (width_f, height_f, x_min_f, x_max_f)

horizontal_half.append(max(results_half_plot[0]))
horizontal_full.append(max(results_full_plot[0]))

print("30µmhorizontalr1")
print(max(results_half_plot[0]))
print(" ")

print("30µmhorizontalfullr1")
print(max(results_full_plot[0]))
print(" ")

ax2.plot(x_new, h_r1)
ax2.plot(peaks_h, h_r1[peaks], "o")
ax2.hlines(*results_half_plot[1:], color="C2")
ax2.hlines(*results_full_plot[1:], color="C3")

ax2.tick_params(which='major', width=2.00)
ax2.tick_params(which='minor', width=2.00)

ax2.xaxis.label.set_fontsize(13)
ax2.xaxis.label.set_weight("bold")
ax2.yaxis.label.set_fontsize(13)
ax2.yaxis.label.set_weight("bold")
ax2.tick_params(axis='both', which='major', labelsize=13)
ax2.set_yticklabels(ax2.get_yticks(), weight='bold')
ax2.set_xticklabels(ax2.get_xticks(), weight='bold')
ax2.yaxis.set_major_formatter(StrMethodFormatter('{x:,.1f}'))
ax2.spines["right"].set_visible(False)
ax2.spines["top"].set_visible(False)
ax2.spines['bottom'].set_linewidth(2)
ax2.spines['left'].set_linewidth(2)
plt.xlabel("x-position (µm)")
plt.ylabel("Photon/s")
plt.legend(["Photon/s", "Peaks", "FWHM", "Full Width"], prop={'weight': 'bold'})
plt.savefig(r"C:\Users\limyu\Google Drive\focusing grating\2D grating GDS\grating type 4 branchs\30µm_horizontal.png", dpi=300, bbox_inches="tight")
plt.show()
plt.close()


#plot verticle
ax2 = plt.axes()
tck = interpolate.splrep(yr1, df_r1_ver.tolist(), s=2, k=4) 
x_new = np.linspace(min(yr1), max(yr1), 1000)
y_fit = interpolate.BSpline(*tck)(x_new)
v_r1 = y_fit - min(y_fit)
peaks, _ = find_peaks(v_r1)
peaks_v = x_new[peaks]
verticle_peaks.append(peaks_v)

results_half = peak_widths(v_r1, peaks, rel_height=0.5)
width = results_half[0]
width = [i*(x_new[1] - x_new[0]) for i in width]
width = np.array(width)
height = results_half[1]
x_min = results_half[2]
x_min = [i*(x_new[1] - x_new[0]) for i in x_min]
x_min = np.array(x_min)
x_max = results_half[3]
x_max = [i*(x_new[1] - x_new[0]) for i in x_max]
x_max = np.array(x_max)
results_half_plot = (width, height, x_min, x_max)

results_full = peak_widths(v_r1, peaks, rel_height=1)
width_f = results_full[0]
width_f = [i*(x_new[1] - x_new[0]) for i in width_f]
width_f = np.array(width_f)
height_f = results_full[1]
x_min_f = results_full[2]
x_min_f = [i*(x_new[1] - x_new[0]) for i in x_min_f]
x_min_f = np.array(x_min_f)
x_max_f = results_full[3]
x_max_f = [i*(x_new[1] - x_new[0]) for i in x_max_f]
x_max_f = np.array(x_max_f)
results_full_plot = (width_f, height_f, x_min_f, x_max_f)


print("30µmverticler1")
print(max(results_half_plot[0]))
print(" ")

print("30µmverticlefullr1")
print(max(results_full_plot[0]))
print(" ")

verticle_half.append(max(results_half_plot[0]))
verticle_full.append(max(results_full_plot[0]))

ax2.plot(x_new, v_r1)
ax2.plot(peaks_v, v_r1[peaks], "o")
ax2.hlines(*results_half_plot[1:], color="C2")
ax2.hlines(*results_full_plot[1:], color="C3")

ax2.tick_params(which='major', width=2.00)
ax2.tick_params(which='minor', width=2.00)

ax2.xaxis.label.set_fontsize(13)
ax2.xaxis.label.set_weight("bold")
ax2.yaxis.label.set_fontsize(13)
ax2.yaxis.label.set_weight("bold")
ax2.tick_params(axis='both', which='major', labelsize=13)
ax2.set_yticklabels(ax2.get_yticks(), weight='bold')
ax2.set_xticklabels(ax2.get_xticks(), weight='bold')
ax2.yaxis.set_major_formatter(StrMethodFormatter('{x:,.1f}'))
ax2.spines["right"].set_visible(False)
ax2.spines["top"].set_visible(False)
ax2.spines['bottom'].set_linewidth(2)
ax2.spines['left'].set_linewidth(2)
plt.xlabel("y-position (µm)")
plt.ylabel("Photon/s")
plt.legend(["Photon/s", "Peaks", "FWHM", "Full Width"], prop={'weight': 'bold'})
plt.savefig(r"C:\Users\limyu\Google Drive\focusing grating\2D grating GDS\grating type 4 branchs\30µm_verticle.png", dpi=300, bbox_inches="tight")
plt.show()
plt.close()


df_r2 = df.iloc[85:109, 261:295]
df_r2_hor = df_r2.iloc[14,:]
df_r2_ver = df_r2.iloc[:, 16]
xr2 = np.linspace(0, 990, num=34)
xr2 = xr2/20
yr2 = np.linspace(0, 690, num=24)
yr2 = yr2/20
colorbarmax = 5000
colorbartick = 5

Xr2,Yr2 = np.meshgrid(xr2,yr2)
df_r2 = df_r2.to_numpy()
fig = plt.figure(figsize=(8, 4))
ax = plt.axes()
cp=ax.contourf(Xr2,Yr2,df_r2, 200, zdir='z', offset=-100, cmap='hot')
clb=fig.colorbar(cp, ticks=(np.arange(0, colorbarmax, 200)).tolist())
clb.ax.set_title('Photon/s', fontweight="bold")
for l in clb.ax.yaxis.get_ticklabels():
    l.set_weight("bold")
    l.set_fontsize(12)
ax.set_xlabel('x-position (µm)', fontsize=13, fontweight="bold", labelpad=1)
ax.set_ylabel('y-position (µm)', fontsize=13, fontweight="bold", labelpad=1)


ax.xaxis.label.set_fontsize(13)
ax.xaxis.label.set_weight("bold")
ax.yaxis.label.set_fontsize(13)
ax.yaxis.label.set_weight("bold")
ax.tick_params(axis='both', which='major', labelsize=13)
ax.set_yticklabels(ax.get_yticks(), weight='bold')
ax.set_xticklabels(ax.get_xticks(), weight='bold')
ax.xaxis.set_major_formatter(StrMethodFormatter('{x:,.1f}'))
ax.yaxis.set_major_formatter(StrMethodFormatter('{x:,.1f}'))
plt.savefig(r"C:\Users\limyu\Google Drive\focusing grating\2D grating GDS\grating type 4 branchs\20µm_2D.png", dpi=300, bbox_inches="tight")
plt.show()
plt.close()


#plot horizontal
ax2 = plt.axes()
tck = interpolate.splrep(xr2, df_r2_hor.tolist(), s=2, k=4) 
x_new = np.linspace(min(xr2), max(xr2), 1000)
y_fit = interpolate.BSpline(*tck)(x_new)
h_r2 = y_fit - min(y_fit)
peaks, _ = find_peaks(h_r2)
peaks_h = x_new[peaks]
horizontal_peaks.append(peaks_h)

results_half = peak_widths(h_r2, peaks, rel_height=0.5)
width = results_half[0]
width = [i*(x_new[1] - x_new[0]) for i in width]
width = np.array(width)
height = results_half[1]
x_min = results_half[2]
x_min = [i*(x_new[1] - x_new[0]) for i in x_min]
x_min = np.array(x_min)
x_max = results_half[3]
x_max = [i*(x_new[1] - x_new[0]) for i in x_max]
x_max = np.array(x_max)
results_half_plot = (width, height, x_min, x_max)

results_full = peak_widths(h_r2, peaks, rel_height=1)
width_f = results_full[0]
width_f = [i*(x_new[1] - x_new[0]) for i in width_f]
width_f = np.array(width_f)
height_f = results_full[1]
x_min_f = results_full[2]
x_min_f = [i*(x_new[1] - x_new[0]) for i in x_min_f]
x_min_f = np.array(x_min_f)
x_max_f = results_full[3]
x_max_f = [i*(x_new[1] - x_new[0]) for i in x_max_f]
x_max_f = np.array(x_max_f)
results_full_plot = (width_f, height_f, x_min_f, x_max_f)


print("20µmhorizontalr2")
print(max(results_half_plot[0]))
print(" ")

print("20µmhorizontalfullr2")
print(max(results_full_plot[0]))
print(" ")
horizontal_half.append(max(results_half_plot[0]))
horizontal_full.append(max(results_full_plot[0]))

ax2.plot(x_new, h_r2)
ax2.plot(peaks_h, h_r2[peaks], "o")
ax2.hlines(*results_half_plot[1:], color="C2")
ax2.hlines(*results_full_plot[1:], color="C3")

ax2.tick_params(which='major', width=2.00)
ax2.tick_params(which='minor', width=2.00)

ax2.xaxis.label.set_fontsize(13)
ax2.xaxis.label.set_weight("bold")
ax2.yaxis.label.set_fontsize(13)
ax2.yaxis.label.set_weight("bold")
ax2.tick_params(axis='both', which='major', labelsize=13)
ax2.set_yticklabels(ax2.get_yticks(), weight='bold')
ax2.set_xticklabels(ax2.get_xticks(), weight='bold')
ax2.yaxis.set_major_formatter(StrMethodFormatter('{x:,.1f}'))
ax2.spines["right"].set_visible(False)
ax2.spines["top"].set_visible(False)
ax2.spines['bottom'].set_linewidth(2)
ax2.spines['left'].set_linewidth(2)
plt.xlabel("x-position (µm)")
plt.ylabel("Photon/s")
plt.legend(["Photon/s", "Peaks", "FWHM", "Full Width"], prop={'weight': 'bold'})
plt.savefig(r"C:\Users\limyu\Google Drive\focusing grating\2D grating GDS\grating type 4 branchs\20µm_horizontal.png", dpi=300, bbox_inches="tight")
plt.show()
plt.close()


#plot verticle
ax2 = plt.axes()
tck = interpolate.splrep(yr2, df_r2_ver.tolist(), s=2, k=4) 
x_new = np.linspace(min(yr2), max(yr2), 1000)
y_fit = interpolate.BSpline(*tck)(x_new)
v_r2 = y_fit - min(y_fit)
peaks, _ = find_peaks(v_r2)
peaks_v = x_new[peaks]
verticle_peaks.append(peaks_v)

results_half = peak_widths(v_r2, peaks, rel_height=0.5)
width = results_half[0]
width = [i*(x_new[1] - x_new[0]) for i in width]
width = np.array(width)
height = results_half[1]
x_min = results_half[2]
x_min = [i*(x_new[1] - x_new[0]) for i in x_min]
x_min = np.array(x_min)
x_max = results_half[3]
x_max = [i*(x_new[1] - x_new[0]) for i in x_max]
x_max = np.array(x_max)
results_half_plot = (width, height, x_min, x_max)

results_full = peak_widths(v_r2, peaks, rel_height=1)
width_f = results_full[0]
width_f = [i*(x_new[1] - x_new[0]) for i in width_f]
width_f = np.array(width_f)
height_f = results_full[1]
x_min_f = results_full[2]
x_min_f = [i*(x_new[1] - x_new[0]) for i in x_min_f]
x_min_f = np.array(x_min_f)
x_max_f = results_full[3]
x_max_f = [i*(x_new[1] - x_new[0]) for i in x_max_f]
x_max_f = np.array(x_max_f)
results_full_plot = (width_f, height_f, x_min_f, x_max_f)


print("20µmverticler2")
print(max(results_half_plot[0]))
print(" ")

print("20µmverticlefullr2")
print(max(results_full_plot[0]))
print(" ")

verticle_half.append(max(results_half_plot[0]))
verticle_full.append(max(results_full_plot[0]))

ax2.plot(x_new, v_r2)
ax2.plot(peaks_v, v_r2[peaks], "o")
ax2.hlines(*results_half_plot[1:], color="C2")
ax2.hlines(*results_full_plot[1:], color="C3")

ax2.tick_params(which='major', width=2.00)
ax2.tick_params(which='minor', width=2.00)

ax2.xaxis.label.set_fontsize(13)
ax2.xaxis.label.set_weight("bold")
ax2.yaxis.label.set_fontsize(13)
ax2.yaxis.label.set_weight("bold")
ax2.tick_params(axis='both', which='major', labelsize=13)
ax2.set_yticklabels(ax2.get_yticks(), weight='bold')
ax2.set_xticklabels(ax2.get_xticks(), weight='bold')
ax2.yaxis.set_major_formatter(StrMethodFormatter('{x:,.1f}'))
ax2.spines["right"].set_visible(False)
ax2.spines["top"].set_visible(False)
ax2.spines['bottom'].set_linewidth(2)
ax2.spines['left'].set_linewidth(2)
plt.xlabel("y-position (µm)")
plt.ylabel("Photon/s")
plt.legend(["Photon/s", "Peaks", "FWHM", "Full Width"], prop={'weight': 'bold'})
plt.savefig(r"C:\Users\limyu\Google Drive\focusing grating\2D grating GDS\grating type 4 branchs\20µm_verticle.png", dpi=300, bbox_inches="tight")
plt.show()
plt.close()


df_r3 = df.iloc[14:38, 263:297]
df_r3_hor = df_r3.iloc[10,:]
df_r3_ver = df_r3.iloc[:, 18]
xr3 = np.linspace(0, 990, num=34)
xr3 = xr3/20
yr3 = np.linspace(0, 690, num=24)
yr3 = yr3/20
colorbarmax = 5000
colorbartick = 5

Xr3,Yr3 = np.meshgrid(xr3,yr3)
df_r3 = df_r3.to_numpy()
fig = plt.figure(figsize=(8, 4))
ax = plt.axes()
cp=ax.contourf(Xr3,Yr3,df_r3, 200, zdir='z', offset=-100, cmap='hot')
clb=fig.colorbar(cp, ticks=(np.arange(0, colorbarmax, 200)).tolist())
clb.ax.set_title('Photon/s', fontweight="bold")
for l in clb.ax.yaxis.get_ticklabels():
    l.set_weight("bold")
    l.set_fontsize(12)
ax.set_xlabel('x-position (µm)', fontsize=13, fontweight="bold", labelpad=1)
ax.set_ylabel('y-position (µm)', fontsize=13, fontweight="bold", labelpad=1)


ax.xaxis.label.set_fontsize(13)
ax.xaxis.label.set_weight("bold")
ax.yaxis.label.set_fontsize(13)
ax.yaxis.label.set_weight("bold")
ax.tick_params(axis='both', which='major', labelsize=13)
ax.set_yticklabels(ax.get_yticks(), weight='bold')
ax.set_xticklabels(ax.get_xticks(), weight='bold')
ax.xaxis.set_major_formatter(StrMethodFormatter('{x:,.1f}'))
ax.yaxis.set_major_formatter(StrMethodFormatter('{x:,.1f}'))
plt.savefig(r"C:\Users\limyu\Google Drive\focusing grating\2D grating GDS\grating type 4 branchs\15µm_2D.png", dpi=300, bbox_inches="tight")
plt.show()
plt.close()


#plot horizontal
ax2 = plt.axes()
tck = interpolate.splrep(xr3, df_r3_hor.tolist(), s=2, k=4) 
x_new = np.linspace(min(xr3), max(xr3), 1000)
y_fit = interpolate.BSpline(*tck)(x_new)
h_r3 = y_fit - min(y_fit)
peaks, _ = find_peaks(h_r3)
peaks_h = x_new[peaks]
horizontal_peaks.append(peaks_h)

results_half = peak_widths(h_r3, peaks, rel_height=0.5)
width = results_half[0]
width = [i*(x_new[1] - x_new[0]) for i in width]
width = np.array(width)
height = results_half[1]
x_min = results_half[2]
x_min = [i*(x_new[1] - x_new[0]) for i in x_min]
x_min = np.array(x_min)
x_max = results_half[3]
x_max = [i*(x_new[1] - x_new[0]) for i in x_max]
x_max = np.array(x_max)
results_half_plot = (width, height, x_min, x_max)

results_full = peak_widths(h_r3, peaks, rel_height=1)
width_f = results_full[0]
width_f = [i*(x_new[1] - x_new[0]) for i in width_f]
width_f = np.array(width_f)
height_f = results_full[1]
x_min_f = results_full[2]
x_min_f = [i*(x_new[1] - x_new[0]) for i in x_min_f]
x_min_f = np.array(x_min_f)
x_max_f = results_full[3]
x_max_f = [i*(x_new[1] - x_new[0]) for i in x_max_f]
x_max_f = np.array(x_max_f)
results_full_plot = (width_f, height_f, x_min_f, x_max_f)


print("15µmhorizontalr3")
print(max(results_half_plot[0]))
print(" ")

print("15µmhorizontalfullr3")
print(max(results_full_plot[0]))
print(" ")
horizontal_half.append(max(results_half_plot[0]))
horizontal_full.append(max(results_full_plot[0]))

ax2.plot(x_new, h_r3)
ax2.plot(peaks_h, h_r3[peaks], "o")
ax2.hlines(*results_half_plot[1:], color="C2")
ax2.hlines(*results_full_plot[1:], color="C3")

ax2.tick_params(which='major', width=2.00)
ax2.tick_params(which='minor', width=2.00)

ax2.xaxis.label.set_fontsize(13)
ax2.xaxis.label.set_weight("bold")
ax2.yaxis.label.set_fontsize(13)
ax2.yaxis.label.set_weight("bold")
ax2.tick_params(axis='both', which='major', labelsize=13)
ax2.set_yticklabels(ax2.get_yticks(), weight='bold')
ax2.set_xticklabels(ax2.get_xticks(), weight='bold')
ax2.yaxis.set_major_formatter(StrMethodFormatter('{x:,.1f}'))
ax2.spines["right"].set_visible(False)
ax2.spines["top"].set_visible(False)
ax2.spines['bottom'].set_linewidth(2)
ax2.spines['left'].set_linewidth(2)
plt.xlabel("x-position (µm)")
plt.ylabel("Photon/s")
plt.legend(["Photon/s", "Peaks", "FWHM", "Full Width"], prop={'weight': 'bold'})
plt.savefig(r"C:\Users\limyu\Google Drive\focusing grating\2D grating GDS\grating type 4 branchs\15µm_horizontal.png", dpi=300, bbox_inches="tight")
plt.show()
plt.close()


#plot vertical
ax2 = plt.axes()
tck = interpolate.splrep(yr3, df_r3_ver.tolist(), s=2, k=4) 
x_new = np.linspace(min(yr3), max(yr3), 1000)
y_fit = interpolate.BSpline(*tck)(x_new)
v_r3 = y_fit - min(y_fit)
peaks, _ = find_peaks(v_r3)
peaks_v = x_new[peaks]
verticle_peaks.append(peaks_v)

results_half = peak_widths(v_r3, peaks, rel_height=0.5)
width = results_half[0]
width = [i*(x_new[1] - x_new[0]) for i in width]
width = np.array(width)
height = results_half[1]
x_min = results_half[2]
x_min = [i*(x_new[1] - x_new[0]) for i in x_min]
x_min = np.array(x_min)
x_max = results_half[3]
x_max = [i*(x_new[1] - x_new[0]) for i in x_max]
x_max = np.array(x_max)
results_half_plot = (width, height, x_min, x_max)

results_full = peak_widths(v_r3, peaks, rel_height=1)
width_f = results_full[0]
width_f = [i*(x_new[1] - x_new[0]) for i in width_f]
width_f = np.array(width_f)
height_f = results_full[1]
x_min_f = results_full[2]
x_min_f = [i*(x_new[1] - x_new[0]) for i in x_min_f]
x_min_f = np.array(x_min_f)
x_max_f = results_full[3]
x_max_f = [i*(x_new[1] - x_new[0]) for i in x_max_f]
x_max_f = np.array(x_max_f)
results_full_plot = (width_f, height_f, x_min_f, x_max_f)


print("15µmverticler3")
print(max(results_half_plot[0]))
print(" ")

print("15µmverticlefullr3")
print(max(results_full_plot[0]))
print(" ")

verticle_half.append(max(results_half_plot[0]))
verticle_full.append(max(results_full_plot[0]))

ax2.plot(x_new, v_r3)
ax2.plot(peaks_v, v_r3[peaks], "o")
ax2.hlines(*results_half_plot[1:], color="C2")
ax2.hlines(*results_full_plot[1:], color="C3")

ax2.tick_params(which='major', width=2.00)
ax2.tick_params(which='minor', width=2.00)

ax2.xaxis.label.set_fontsize(13)
ax2.xaxis.label.set_weight("bold")
ax2.yaxis.label.set_fontsize(13)
ax2.yaxis.label.set_weight("bold")
ax2.tick_params(axis='both', which='major', labelsize=13)
ax2.set_yticklabels(ax2.get_yticks(), weight='bold')
ax2.set_xticklabels(ax2.get_xticks(), weight='bold')
ax2.yaxis.set_major_formatter(StrMethodFormatter('{x:,.1f}'))
ax2.spines["right"].set_visible(False)
ax2.spines["top"].set_visible(False)
ax2.spines['bottom'].set_linewidth(2)
ax2.spines['left'].set_linewidth(2)
plt.xlabel("y-position (µm)")
plt.ylabel("Photon/s")
plt.legend(["Photon/s", "Peaks", "FWHM", "Full Width"], prop={'weight': 'bold'})
plt.savefig(r"C:\Users\limyu\Google Drive\focusing grating\2D grating GDS\grating type 4 branchs\15µm_verticle.png", dpi=300, bbox_inches="tight")
plt.show()
plt.close()



df = pd.read_csv(r"C:\Users\limyu\Google Drive\focusing grating\2D grating GDS\grating type 4 branchs\different radius2 4x mag upper 50mA laser_0001.ascii.csv",header=None, sep=",")
    
df=df.dropna(axis=1)
print(df)


x = np.linspace(0, 9570, num=320)
x = x/20
y = np.linspace(0, 7650, num=256)
y = y/20
colorbarmax = 4500
colorbartick = 9

X,Y = np.meshgrid(x,y)
df1 = df.to_numpy()
fig = plt.figure(figsize=(7, 4))
ax = plt.axes()
cp=ax.contourf(X,Y,df, 200, zdir='z', offset=-100, cmap='hot')
clb=fig.colorbar(cp, ticks=(np.arange(0, colorbarmax, 500)).tolist())
clb.ax.set_title('Photon/s', fontweight="bold")
for l in clb.ax.yaxis.get_ticklabels():
    l.set_weight("bold")
    l.set_fontsize(12)
ax.set_xlabel('x-position (µm)', fontsize=13, fontweight="bold", labelpad=1)
ax.set_ylabel('y-position (µm)', fontsize=13, fontweight="bold", labelpad=1)


ax.xaxis.label.set_fontsize(13)
ax.xaxis.label.set_weight("bold")
ax.yaxis.label.set_fontsize(13)
ax.yaxis.label.set_weight("bold")
ax.tick_params(axis='both', which='major', labelsize=13)
ax.set_yticklabels(ax.get_yticks(), weight='bold')
ax.set_xticklabels(ax.get_xticks(), weight='bold')
ax.xaxis.set_major_formatter(StrMethodFormatter('{x:,.1f}'))
ax.yaxis.set_major_formatter(StrMethodFormatter('{x:,.1f}'))
plt.savefig(r"C:\Users\limyu\Google Drive\focusing grating\2D grating GDS\grating type 4 branchs\radius2_upper_everything.png", dpi=300, bbox_inches="tight")
plt.show()
plt.close()

fig = plt.figure(figsize =(14, 9))
ax = plt.axes(projection ='3d')
ax.plot_surface(X, Y, df1, cmap='hot')
ax.set_xlabel('x-position (µm)', fontsize=13, fontweight="bold", labelpad=13)
ax.set_ylabel('y-position (µm)', fontsize=13, fontweight="bold", labelpad=15)
ax.set_zlabel('Photon/s', fontsize=13, fontweight="bold", labelpad=15)


ax.xaxis.label.set_fontsize(13)
ax.xaxis.label.set_weight("bold")
ax.yaxis.label.set_fontsize(13)
ax.yaxis.label.set_weight("bold")
ax.zaxis.label.set_fontsize(13)
ax.zaxis.label.set_weight("bold")
ax.tick_params(axis='both', which='major', labelsize=13)
ax.set_zticklabels(ax.get_zticks(), weight='bold')
ax.set_yticklabels(ax.get_yticks(), weight='bold')
ax.set_xticklabels(ax.get_xticks(), weight='bold')
ax.yaxis.set_major_formatter(StrMethodFormatter('{x:,.1f}'))

plt.savefig(r"C:\Users\limyu\Google Drive\focusing grating\2D grating GDS\grating type 4 branchs\radius2_upper_everything_3D.png", dpi=300, bbox_inches="tight")
plt.show()
plt.close()

df_r4 = df.iloc[226:250, 263:297]
df_r4_hor = df_r4.iloc[11,:]
df_r4_ver = df_r4.iloc[:, 17]
xr4 = np.linspace(0, 990, num=34)
xr4 = xr4/20
yr4 = np.linspace(0, 690, num=24)
yr4 = yr4/20
colorbarmax = 5000
colorbartick = 9



Xr4,Yr4 = np.meshgrid(xr4,yr4)
df_r4 = df_r4.to_numpy()
fig = plt.figure(figsize=(8, 4))
ax = plt.axes()
cp=ax.contourf(Xr4,Yr4,df_r4, 200, zdir='z', offset=-100, cmap='hot')
clb=fig.colorbar(cp, ticks=(np.arange(0, colorbarmax, 500)).tolist())
clb.ax.set_title('Photon/s', fontweight="bold")
for l in clb.ax.yaxis.get_ticklabels():
    l.set_weight("bold")
    l.set_fontsize(12)
ax.set_xlabel('x-position (µm)', fontsize=13, fontweight="bold", labelpad=1)
ax.set_ylabel('y-position (µm)', fontsize=13, fontweight="bold", labelpad=1)


ax.xaxis.label.set_fontsize(13)
ax.xaxis.label.set_weight("bold")
ax.yaxis.label.set_fontsize(13)
ax.yaxis.label.set_weight("bold")
ax.tick_params(axis='both', which='major', labelsize=13)
ax.set_yticklabels(ax.get_yticks(), weight='bold')
ax.set_xticklabels(ax.get_xticks(), weight='bold')
ax.xaxis.set_major_formatter(StrMethodFormatter('{x:,.1f}'))
ax.yaxis.set_major_formatter(StrMethodFormatter('{x:,.1f}'))
plt.savefig(r"C:\Users\limyu\Google Drive\focusing grating\2D grating GDS\grating type 4 branchs\60µm_2D.png", dpi=300, bbox_inches="tight")
plt.show()
plt.close()

#plot horizontal
ax2 = plt.axes()
tck = interpolate.splrep(xr4, df_r4_hor.tolist(), s=2, k=4) 
x_new = np.linspace(min(xr4), max(xr4), 1000)
y_fit = interpolate.BSpline(*tck)(x_new)
h_r4 = y_fit - min(y_fit)
peaks, _ = find_peaks(h_r4)
peaks_h = x_new[peaks]
horizontal_peaks.append(peaks_h)

results_half = peak_widths(h_r4, peaks, rel_height=0.5)
width = results_half[0]
width = [i*(x_new[1] - x_new[0]) for i in width]
width = np.array(width)
height = results_half[1]
x_min = results_half[2]
x_min = [i*(x_new[1] - x_new[0]) for i in x_min]
x_min = np.array(x_min)
x_max = results_half[3]
x_max = [i*(x_new[1] - x_new[0]) for i in x_max]
x_max = np.array(x_max)
results_half_plot = (width, height, x_min, x_max)

results_full = peak_widths(h_r4, peaks, rel_height=1)
width_f = results_full[0]
width_f = [i*(x_new[1] - x_new[0]) for i in width_f]
width_f = np.array(width_f)
height_f = results_full[1]
x_min_f = results_full[2]
x_min_f = [i*(x_new[1] - x_new[0]) for i in x_min_f]
x_min_f = np.array(x_min_f)
x_max_f = results_full[3]
x_max_f = [i*(x_new[1] - x_new[0]) for i in x_max_f]
x_max_f = np.array(x_max_f)
results_full_plot = (width_f, height_f, x_min_f, x_max_f)


print("60µmhorizontalr4")
print(max(results_half_plot[0]))
print(" ")

print("60µmhorizontalfullr4")
print(max(results_full_plot[0]))
print(" ")

horizontal_half.append(max(results_half_plot[0]))
horizontal_full.append(max(results_full_plot[0]))

ax2.plot(x_new, h_r4)
ax2.plot(peaks_h, h_r4[peaks], "o")
ax2.hlines(*results_half_plot[1:], color="C2")
ax2.hlines(*results_full_plot[1:], color="C3")

ax2.tick_params(which='major', width=2.00)
ax2.tick_params(which='minor', width=2.00)

ax2.xaxis.label.set_fontsize(13)
ax2.xaxis.label.set_weight("bold")
ax2.yaxis.label.set_fontsize(13)
ax2.yaxis.label.set_weight("bold")
ax2.tick_params(axis='both', which='major', labelsize=13)
ax2.set_yticklabels(ax2.get_yticks(), weight='bold')
ax2.set_xticklabels(ax2.get_xticks(), weight='bold')
ax2.yaxis.set_major_formatter(StrMethodFormatter('{x:,.1f}'))
ax2.spines["right"].set_visible(False)
ax2.spines["top"].set_visible(False)
ax2.spines['bottom'].set_linewidth(2)
ax2.spines['left'].set_linewidth(2)
plt.xlabel("x-position (µm)")
plt.ylabel("Photon/s")
plt.legend(["Photon/s", "Peaks", "FWHM", "Full Width"], prop={'weight': 'bold'})
plt.savefig(r"C:\Users\limyu\Google Drive\focusing grating\2D grating GDS\grating type 4 branchs\60µm_horizontal.png", dpi=300, bbox_inches="tight")
plt.show()
plt.close()


#plot verticle
ax2 = plt.axes()
tck = interpolate.splrep(yr4, df_r4_ver.tolist(), s=2, k=4) 
x_new = np.linspace(min(yr4), max(yr4), 1000)
y_fit = interpolate.BSpline(*tck)(x_new)
v_r4 = y_fit - min(y_fit)


peaks, _ = find_peaks(v_r4)
peaks_v = x_new[peaks]
verticle_peaks.append(peaks_v)

results_half = peak_widths(v_r4, peaks, rel_height=0.5)
width = results_half[0]
width = [i*(x_new[1] - x_new[0]) for i in width]
width = np.array(width)
height = results_half[1]
x_min = results_half[2]
x_min = [i*(x_new[1] - x_new[0]) for i in x_min]
x_min = np.array(x_min)
x_max = results_half[3]
x_max = [i*(x_new[1] - x_new[0]) for i in x_max]
x_max = np.array(x_max)
results_half_plot = (width, height, x_min, x_max)

results_full = peak_widths(v_r4, peaks, rel_height=1)
width_f = results_full[0]
width_f = [i*(x_new[1] - x_new[0]) for i in width_f]
width_f = np.array(width_f)
height_f = results_full[1]
x_min_f = results_full[2]
x_min_f = [i*(x_new[1] - x_new[0]) for i in x_min_f]
x_min_f = np.array(x_min_f)
x_max_f = results_full[3]
x_max_f = [i*(x_new[1] - x_new[0]) for i in x_max_f]
x_max_f = np.array(x_max_f)
results_full_plot = (width_f, height_f, x_min_f, x_max_f)


print("60µmverticler4")
print(max(results_half_plot[0]))
print(" ")

print("60µmverticlefullr4")
print(max(results_full_plot[0]))
print(" ")

verticle_half.append(max(results_half_plot[0]))
verticle_full.append(max(results_full_plot[0]))

ax2.plot(x_new, v_r4)
ax2.plot(peaks_v, v_r4[peaks], "o")
ax2.hlines(*results_half_plot[1:], color="C2")
ax2.hlines(*results_full_plot[1:], color="C3")

ax2.tick_params(which='major', width=2.00)
ax2.tick_params(which='minor', width=2.00)

ax2.xaxis.label.set_fontsize(13)
ax2.xaxis.label.set_weight("bold")
ax2.yaxis.label.set_fontsize(13)
ax2.yaxis.label.set_weight("bold")
ax2.tick_params(axis='both', which='major', labelsize=13)
ax2.set_yticklabels(ax2.get_yticks(), weight='bold')
ax2.set_xticklabels(ax2.get_xticks(), weight='bold')
ax2.yaxis.set_major_formatter(StrMethodFormatter('{x:,.1f}'))
ax2.spines["right"].set_visible(False)
ax2.spines["top"].set_visible(False)
ax2.spines['bottom'].set_linewidth(2)
ax2.spines['left'].set_linewidth(2)
plt.xlabel("y-position (µm)")
plt.ylabel("Photon/s")
plt.legend(["Photon/s", "Peaks", "FWHM", "Full Width"], prop={'weight': 'bold'})
plt.savefig(r"C:\Users\limyu\Google Drive\focusing grating\2D grating GDS\grating type 4 branchs\60µm_verticle.png", dpi=300, bbox_inches="tight")
plt.show()
plt.close()


df_r5 = df.iloc[85:109, 266:300]
df_r5_hor = df_r5.iloc[11,:]
df_r5_ver = df_r5.iloc[:, 17]
xr5 = np.linspace(0, 990, num=34)
xr5 = xr5/20
yr5 = np.linspace(0, 690, num=24)
yr5 = yr5/20
colorbarmax = 5000
colorbartick = 5

Xr5,Yr5 = np.meshgrid(xr5,yr5)
df_r5 = df_r5.to_numpy()
fig = plt.figure(figsize=(8, 4))
ax = plt.axes()
cp=ax.contourf(Xr5,Yr5,df_r5, 200, zdir='z', offset=-100, cmap='hot')
clb=fig.colorbar(cp, ticks=(np.arange(0, colorbarmax, 500)).tolist())
clb.ax.set_title('Photon/s', fontweight="bold")
for l in clb.ax.yaxis.get_ticklabels():
    l.set_weight("bold")
    l.set_fontsize(12)
ax.set_xlabel('x-position (µm)', fontsize=13, fontweight="bold", labelpad=1)
ax.set_ylabel('y-position (µm)', fontsize=13, fontweight="bold", labelpad=1)


ax.xaxis.label.set_fontsize(13)
ax.xaxis.label.set_weight("bold")
ax.yaxis.label.set_fontsize(13)
ax.yaxis.label.set_weight("bold")
ax.tick_params(axis='both', which='major', labelsize=13)
ax.set_yticklabels(ax.get_yticks(), weight='bold')
ax.set_xticklabels(ax.get_xticks(), weight='bold')
ax.xaxis.set_major_formatter(StrMethodFormatter('{x:,.1f}'))
ax.yaxis.set_major_formatter(StrMethodFormatter('{x:,.1f}'))
plt.savefig(r"C:\Users\limyu\Google Drive\focusing grating\2D grating GDS\grating type 4 branchs\50µm_2D.png", dpi=300, bbox_inches="tight")
plt.show()
plt.close()


#plot horizontal
ax2 = plt.axes()
tck = interpolate.splrep(xr5, df_r5_hor.tolist(), s=2, k=4) 
x_new = np.linspace(min(xr5), max(xr5), 1000)
y_fit = interpolate.BSpline(*tck)(x_new)
h_r5 = y_fit - min(y_fit)
peaks, _ = find_peaks(h_r5)
peaks_h = x_new[peaks]
horizontal_peaks.append(peaks_h)

results_half = peak_widths(h_r5, peaks, rel_height=0.5)
width = results_half[0]
width = [i*(x_new[1] - x_new[0]) for i in width]
width = np.array(width)
height = results_half[1]
x_min = results_half[2]
x_min = [i*(x_new[1] - x_new[0]) for i in x_min]
x_min = np.array(x_min)
x_max = results_half[3]
x_max = [i*(x_new[1] - x_new[0]) for i in x_max]
x_max = np.array(x_max)
results_half_plot = (width, height, x_min, x_max)

results_full = peak_widths(h_r5, peaks, rel_height=1)
width_f = results_full[0]
width_f = [i*(x_new[1] - x_new[0]) for i in width_f]
width_f = np.array(width_f)
height_f = results_full[1]
x_min_f = results_full[2]
x_min_f = [i*(x_new[1] - x_new[0]) for i in x_min_f]
x_min_f = np.array(x_min_f)
x_max_f = results_full[3]
x_max_f = [i*(x_new[1] - x_new[0]) for i in x_max_f]
x_max_f = np.array(x_max_f)
results_full_plot = (width_f, height_f, x_min_f, x_max_f)


print("50µmhorizontalr5")
print(max(results_half_plot[0]))
print(" ")

print("50µmhorizontalfullr5")
print(max(results_full_plot[0]))
print(" ")

horizontal_half.append(max(results_half_plot[0]))
horizontal_full.append(max(results_full_plot[0]))

ax2.plot(x_new, h_r5)
ax2.plot(peaks_h, h_r5[peaks], "o")
ax2.hlines(*results_half_plot[1:], color="C2")
ax2.hlines(*results_full_plot[1:], color="C3")

ax2.tick_params(which='major', width=2.00)
ax2.tick_params(which='minor', width=2.00)

ax2.xaxis.label.set_fontsize(13)
ax2.xaxis.label.set_weight("bold")
ax2.yaxis.label.set_fontsize(13)
ax2.yaxis.label.set_weight("bold")
ax2.tick_params(axis='both', which='major', labelsize=13)
ax2.set_yticklabels(ax2.get_yticks(), weight='bold')
ax2.set_xticklabels(ax2.get_xticks(), weight='bold')
ax2.yaxis.set_major_formatter(StrMethodFormatter('{x:,.1f}'))
ax2.spines["right"].set_visible(False)
ax2.spines["top"].set_visible(False)
ax2.spines['bottom'].set_linewidth(2)
ax2.spines['left'].set_linewidth(2)
plt.xlabel("x-position (µm)")
plt.ylabel("Photon/s")
plt.legend(["Photon/s", "Peaks", "FWHM", "Full Width"], prop={'weight': 'bold'})
plt.savefig(r"C:\Users\limyu\Google Drive\focusing grating\2D grating GDS\grating type 4 branchs\50µm_horizontal.png", dpi=300, bbox_inches="tight")
plt.show()
plt.close()


#plot verticle
ax2 = plt.axes()
tck = interpolate.splrep(yr5, df_r5_ver.tolist(), s=2, k=4) 
x_new = np.linspace(min(yr5), max(yr5), 1000)
y_fit = interpolate.BSpline(*tck)(x_new)
v_r5 = y_fit - min(y_fit)
peaks, _ = find_peaks(v_r5)
peaks_v = x_new[peaks]
verticle_peaks.append(peaks_v)

results_half = peak_widths(v_r5, peaks, rel_height=0.5)
width = results_half[0]
width = [i*(x_new[1] - x_new[0]) for i in width]
width = np.array(width)
height = results_half[1]
x_min = results_half[2]
x_min = [i*(x_new[1] - x_new[0]) for i in x_min]
x_min = np.array(x_min)
x_max = results_half[3]
x_max = [i*(x_new[1] - x_new[0]) for i in x_max]
x_max = np.array(x_max)
results_half_plot = (width, height, x_min, x_max)

results_full = peak_widths(v_r5, peaks, rel_height=1)
width_f = results_full[0]
width_f = [i*(x_new[1] - x_new[0]) for i in width_f]
width_f = np.array(width_f)
height_f = results_full[1]
x_min_f = results_full[2]
x_min_f = [i*(x_new[1] - x_new[0]) for i in x_min_f]
x_min_f = np.array(x_min_f)
x_max_f = results_full[3]
x_max_f = [i*(x_new[1] - x_new[0]) for i in x_max_f]
x_max_f = np.array(x_max_f)
results_full_plot = (width_f, height_f, x_min_f, x_max_f)


print("50µmverticler5")
print(max(results_half_plot[0]))
print(" ")

print("50µmverticlefullr5")
print(max(results_full_plot[0]))
print(" ")

verticle_half.append(max(results_half_plot[0]))
verticle_full.append(max(results_full_plot[0]))

ax2.plot(x_new, v_r5)
ax2.plot(peaks_v, v_r5[peaks], "o")
ax2.hlines(*results_half_plot[1:], color="C2")
ax2.hlines(*results_full_plot[1:], color="C3")

ax2.tick_params(which='major', width=2.00)
ax2.tick_params(which='minor', width=2.00)

ax2.xaxis.label.set_fontsize(13)
ax2.xaxis.label.set_weight("bold")
ax2.yaxis.label.set_fontsize(13)
ax2.yaxis.label.set_weight("bold")
ax2.tick_params(axis='both', which='major', labelsize=13)
ax2.set_yticklabels(ax2.get_yticks(), weight='bold')
ax2.set_xticklabels(ax2.get_xticks(), weight='bold')
ax2.yaxis.set_major_formatter(StrMethodFormatter('{x:,.1f}'))
ax2.spines["right"].set_visible(False)
ax2.spines["top"].set_visible(False)
ax2.spines['bottom'].set_linewidth(2)
ax2.spines['left'].set_linewidth(2)
plt.xlabel("y-position (µm)")
plt.ylabel("Photon/s")
plt.legend(["Photon/s", "Peaks", "FWHM", "Full Width"], prop={'weight': 'bold'})
plt.savefig(r"C:\Users\limyu\Google Drive\focusing grating\2D grating GDS\grating type 4 branchs\50µm_verticle.png", dpi=300, bbox_inches="tight")
plt.show()
plt.close()


df_r6 = df.iloc[14:38, 268:302]
df_r6_hor = df_r6.iloc[15,:]
df_r6_ver = df_r6.iloc[:, 18]
xr6 = np.linspace(0, 990, num=34)
xr6 = xr6/20
yr6 = np.linspace(0, 690, num=24)
yr6 = yr6/20
colorbarmax = 5000
colorbartick = 5

Xr6,Yr6 = np.meshgrid(xr6,yr6)
df_r6 = df_r6.to_numpy()
fig = plt.figure(figsize=(8, 4))
ax = plt.axes()
cp=ax.contourf(Xr6,Yr6,df_r6, 200, zdir='z', offset=-100, cmap='hot')
clb=fig.colorbar(cp, ticks=(np.arange(0, colorbarmax, 500)).tolist())
clb.ax.set_title('Photon/s', fontweight="bold")
for l in clb.ax.yaxis.get_ticklabels():
    l.set_weight("bold")
    l.set_fontsize(12)
ax.set_xlabel('x-position (µm)', fontsize=13, fontweight="bold", labelpad=1)
ax.set_ylabel('y-position (µm)', fontsize=13, fontweight="bold", labelpad=1)


ax.xaxis.label.set_fontsize(13)
ax.xaxis.label.set_weight("bold")
ax.yaxis.label.set_fontsize(13)
ax.yaxis.label.set_weight("bold")
ax.tick_params(axis='both', which='major', labelsize=13)
ax.set_yticklabels(ax.get_yticks(), weight='bold')
ax.set_xticklabels(ax.get_xticks(), weight='bold')
ax.xaxis.set_major_formatter(StrMethodFormatter('{x:,.1f}'))
ax.yaxis.set_major_formatter(StrMethodFormatter('{x:,.1f}'))
plt.savefig(r"C:\Users\limyu\Google Drive\focusing grating\2D grating GDS\grating type 4 branchs\40µm_2D.png", dpi=300, bbox_inches="tight")
plt.show()
plt.close()


#plot horizontal
ax2 = plt.axes()
tck = interpolate.splrep(xr6, df_r6_hor.tolist(), s=2, k=4) 
x_new = np.linspace(min(xr6), max(xr6), 1000)
y_fit = interpolate.BSpline(*tck)(x_new)
h_r6 = y_fit - min(y_fit)
peaks, _ = find_peaks(h_r6)
peaks_h = x_new[peaks]
horizontal_peaks.append(peaks_h)

results_half = peak_widths(h_r6, peaks, rel_height=0.5)
width = results_half[0]
width = [i*(x_new[1] - x_new[0]) for i in width]
width = np.array(width)
height = results_half[1]
x_min = results_half[2]
x_min = [i*(x_new[1] - x_new[0]) for i in x_min]
x_min = np.array(x_min)
x_max = results_half[3]
x_max = [i*(x_new[1] - x_new[0]) for i in x_max]
x_max = np.array(x_max)
results_half_plot = (width, height, x_min, x_max)

results_full = peak_widths(h_r6, peaks, rel_height=1)
width_f = results_full[0]
width_f = [i*(x_new[1] - x_new[0]) for i in width_f]
width_f = np.array(width_f)
height_f = results_full[1]
x_min_f = results_full[2]
x_min_f = [i*(x_new[1] - x_new[0]) for i in x_min_f]
x_min_f = np.array(x_min_f)
x_max_f = results_full[3]
x_max_f = [i*(x_new[1] - x_new[0]) for i in x_max_f]
x_max_f = np.array(x_max_f)
results_full_plot = (width_f, height_f, x_min_f, x_max_f)


print("40µmhorizontalr6")
print(max(results_half_plot[0]))
print(" ")

print("40µmhorizontalfullr6")
print(max(results_full_plot[0]))
print(" ")

horizontal_half.append(max(results_half_plot[0]))
horizontal_full.append(max(results_full_plot[0]))

ax2.plot(x_new, h_r6)
ax2.plot(peaks_h, h_r6[peaks], "o")
ax2.hlines(*results_half_plot[1:], color="C2")
ax2.hlines(*results_full_plot[1:], color="C3")

ax2.tick_params(which='major', width=2.00)
ax2.tick_params(which='minor', width=2.00)

ax2.xaxis.label.set_fontsize(13)
ax2.xaxis.label.set_weight("bold")
ax2.yaxis.label.set_fontsize(13)
ax2.yaxis.label.set_weight("bold")
ax2.tick_params(axis='both', which='major', labelsize=13)
ax2.set_yticklabels(ax2.get_yticks(), weight='bold')
ax2.set_xticklabels(ax2.get_xticks(), weight='bold')
ax2.yaxis.set_major_formatter(StrMethodFormatter('{x:,.1f}'))
ax2.spines["right"].set_visible(False)
ax2.spines["top"].set_visible(False)
ax2.spines['bottom'].set_linewidth(2)
ax2.spines['left'].set_linewidth(2)
plt.xlabel("x-position (µm)")
plt.ylabel("Photon/s")
plt.legend(["Photon/s", "Peaks", "FWHM", "Full Width"], prop={'weight': 'bold'})
plt.savefig(r"C:\Users\limyu\Google Drive\focusing grating\2D grating GDS\grating type 4 branchs\40µm_horizontal.png", dpi=300, bbox_inches="tight")
plt.show()
plt.close()


#plot vertical
ax2 = plt.axes()
tck = interpolate.splrep(yr6, df_r6_ver.tolist(), s=2, k=4) 
x_new = np.linspace(min(yr6), max(yr6), 1000)
y_fit = interpolate.BSpline(*tck)(x_new)
v_r6 = y_fit - min(y_fit)
peaks, _ = find_peaks(v_r6)
peaks_v = x_new[peaks]
verticle_peaks.append(peaks_v)

results_half = peak_widths(v_r6, peaks, rel_height=0.5)
width = results_half[0]
width = [i*(x_new[1] - x_new[0]) for i in width]
width = np.array(width)
height = results_half[1]
x_min = results_half[2]
x_min = [i*(x_new[1] - x_new[0]) for i in x_min]
x_min = np.array(x_min)
x_max = results_half[3]
x_max = [i*(x_new[1] - x_new[0]) for i in x_max]
x_max = np.array(x_max)
results_half_plot = (width, height, x_min, x_max)

results_full = peak_widths(v_r6, peaks, rel_height=1)
width_f = results_full[0]
width_f = [i*(x_new[1] - x_new[0]) for i in width_f]
width_f = np.array(width_f)
height_f = results_full[1]
x_min_f = results_full[2]
x_min_f = [i*(x_new[1] - x_new[0]) for i in x_min_f]
x_min_f = np.array(x_min_f)
x_max_f = results_full[3]
x_max_f = [i*(x_new[1] - x_new[0]) for i in x_max_f]
x_max_f = np.array(x_max_f)
results_full_plot = (width_f, height_f, x_min_f, x_max_f)


print("40µmverticler6")
print(max(results_half_plot[0]))
print(" ")

print("40µmverticlefullr6")
print(max(results_full_plot[0]))
print(" ")

verticle_half.append(max(results_half_plot[0]))
verticle_full.append(max(results_full_plot[0]))

ax2.plot(x_new, v_r6)
ax2.plot(peaks_v, v_r6[peaks], "o")
ax2.hlines(*results_half_plot[1:], color="C2")
ax2.hlines(*results_full_plot[1:], color="C3")

ax2.tick_params(which='major', width=2.00)
ax2.tick_params(which='minor', width=2.00)

ax2.xaxis.label.set_fontsize(13)
ax2.xaxis.label.set_weight("bold")
ax2.yaxis.label.set_fontsize(13)
ax2.yaxis.label.set_weight("bold")
ax2.tick_params(axis='both', which='major', labelsize=13)
ax2.set_yticklabels(ax2.get_yticks(), weight='bold')
ax2.set_xticklabels(ax2.get_xticks(), weight='bold')
ax2.yaxis.set_major_formatter(StrMethodFormatter('{x:,.1f}'))
ax2.spines["right"].set_visible(False)
ax2.spines["top"].set_visible(False)
ax2.spines['bottom'].set_linewidth(2)
ax2.spines['left'].set_linewidth(2)
plt.xlabel("y-position (µm)")
plt.ylabel("Photon/s")
plt.legend(["Photon/s", "Peaks", "FWHM", "Full Width"], prop={'weight': 'bold'})
plt.savefig(r"C:\Users\limyu\Google Drive\focusing grating\2D grating GDS\grating type 4 branchs\40µm_verticle.png", dpi=300, bbox_inches="tight")
plt.show()
plt.close()

xr1_fit = np.linspace(min(xr1), max(xr1), 1000)
xr2_fit = np.linspace(min(xr2), max(xr2), 1000)
xr3_fit = np.linspace(min(xr3), max(xr3), 1000)
xr4_fit = np.linspace(min(xr4), max(xr4), 1000)
xr5_fit = np.linspace(min(xr5), max(xr5), 1000)
xr6_fit = np.linspace(min(xr6), max(xr6), 1000)
hor = np.linspace(min(xr6), max(xr6), 1000)
master_data_horizontal["hor_30µm"] = h_r1
master_data_horizontal["hor_20µm"] = h_r2
master_data_horizontal["hor_15µm"] = h_r3
master_data_horizontal["hor_60µm"] = h_r4
master_data_horizontal["hor_50µm"] = h_r5
master_data_horizontal["hor_40µm"] = h_r6
master_data_horizontal["x_position"] = hor
ax2 = plt.axes()
ax2.plot(hor, master_data_horizontal["hor_15µm"])
ax2.plot(hor, master_data_horizontal["hor_20µm"])
ax2.plot(hor, master_data_horizontal["hor_30µm"])
ax2.plot(hor, master_data_horizontal["hor_40µm"])
ax2.plot(hor, master_data_horizontal["hor_50µm"])
ax2.plot(hor, master_data_horizontal["hor_60µm"])
ax2.tick_params(which='major', width=2.00)
ax2.tick_params(which='minor', width=2.00)
ax2.xaxis.label.set_fontsize(13)
ax2.xaxis.label.set_weight("bold")
ax2.yaxis.label.set_fontsize(13)
ax2.yaxis.label.set_weight("bold")
ax2.tick_params(axis='both', which='major', labelsize=13)
ax2.set_yticklabels(ax2.get_yticks(), weight='bold')
ax2.set_xticklabels(ax2.get_xticks(), weight='bold')
ax2.yaxis.set_major_formatter(StrMethodFormatter('{x:,.1f}'))
ax2.spines["right"].set_visible(False)
ax2.spines["top"].set_visible(False)
ax2.spines['bottom'].set_linewidth(2)
ax2.spines['left'].set_linewidth(2)
plt.xlabel("x-position (µm)")
plt.ylabel("Photon/s")
plt.legend(["15µm", "20µm", "30µm", "40µm", "50µm", "60µm"], prop={'weight': 'bold'})
plt.savefig(r"C:\Users\limyu\Google Drive\focusing grating\2D grating GDS\grating type 4 branchs\horizontal_compile.png", dpi=300, bbox_inches="tight")
plt.show()
plt.close()


yr1_fit = np.linspace(min(yr1), max(yr1), 1000)
yr2_fit = np.linspace(min(yr2), max(yr2), 1000)
yr3_fit = np.linspace(min(yr3), max(yr3), 1000)
yr4_fit = np.linspace(min(yr4), max(yr4), 1000)
yr5_fit = np.linspace(min(yr5), max(yr5), 1000)
yr6_fit = np.linspace(min(yr6), max(yr6), 1000)
ver = np.linspace(min(yr6), max(yr6), 1000)
master_data_verticle["ver_30µm"] = v_r1
master_data_verticle["ver_20µm"] = v_r2
master_data_verticle["ver_15µm"] = v_r3
master_data_verticle["ver_60µm"] = v_r4
master_data_verticle["ver_50µm"] = v_r5
master_data_verticle["ver_40µm"] = v_r6
master_data_verticle["y_position"] = ver
ax2 = plt.axes()

ax2.plot(ver, master_data_verticle["ver_15µm"])
ax2.plot(ver, master_data_verticle["ver_20µm"])
ax2.plot(ver, master_data_verticle["ver_30µm"])
ax2.plot(ver, master_data_verticle["ver_40µm"])
ax2.plot(ver, master_data_verticle["ver_50µm"])
ax2.plot(ver, master_data_verticle["ver_60µm"])
ax2.tick_params(which='major', width=2.00)
ax2.tick_params(which='minor', width=2.00)
ax2.xaxis.label.set_fontsize(13)
ax2.xaxis.label.set_weight("bold")
ax2.yaxis.label.set_fontsize(13)
ax2.yaxis.label.set_weight("bold")
ax2.tick_params(axis='both', which='major', labelsize=13)
ax2.set_yticklabels(ax2.get_yticks(), weight='bold')
ax2.set_xticklabels(ax2.get_xticks(), weight='bold')
ax2.yaxis.set_major_formatter(StrMethodFormatter('{x:,.1f}'))
ax2.spines["right"].set_visible(False)
ax2.spines["top"].set_visible(False)
ax2.spines['bottom'].set_linewidth(2)
ax2.spines['left'].set_linewidth(2)
plt.xlabel("y-position (µm)")
plt.ylabel("Photon/s")
plt.legend(["15µm", "20µm", "30µm", "40µm", "50µm", "60µm"], prop={'weight': 'bold'})
plt.savefig(r"C:\Users\limyu\Google Drive\focusing grating\2D grating GDS\grating type 4 branchs\verticle_compile.png", dpi=300, bbox_inches="tight")
plt.show()
plt.close()

print(master_data_horizontal)
print(master_data_verticle)

print("r1 is 30µm")
print("r2 is 20µm")
print("r3 is 15µm")
print("r4 is 60µm")
print("r5 is 50µm")
print("r6 is 40µm")

radius = ["15µm", "20µm", "30µm", "40µm", "50µm", "60µm"]
master_data_verticle.to_excel(r'C:\Users\limyu\Google Drive\focusing grating\2D grating GDS\grating type 4 branchs\master_data_verticle.xlsx', index=False)
master_data_horizontal.to_excel(r'C:\Users\limyu\Google Drive\focusing grating\2D grating GDS\grating type 4 branchs\master_data_horizontal.xlsx', index=False)
peak_height_horizontal = [max(h_r1), max(h_r2), max(h_r3), max(h_r4), max(h_r5), max(h_r6) ]
peak_height_verticle = [max(v_r1), max(v_r2), max(v_r3), max(v_r4), max(v_r5), max(v_r6) ]
